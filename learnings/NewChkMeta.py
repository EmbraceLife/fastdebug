class NewChkMeta(FixSigMeta):=============================================================(0)       
    "Metaclass to avoid recreating object passed to constructor"==========================(1) # [37;1mNewChkMeta is a metaclass inherited from FixSigMea[0m; [36;1mit makes its own __call__[0m; [92;1mwhen its class instance, e.g., _T, create object instances (e.g, t) without args nor kwargs but only x, and x is an object of the instance class, then return x[0m; [35;1motherwise, create and return a new object created by the instance class's super class' __call__ method with x as param[0m; [35;1mIn other words, t = _T(3) will create a new obj[0m; [93;1m_T(t) will return t[0m; [91;1m_T(t, 1) or _T(t, b=1) will also return a new obj[0m; 
    def __call__(cls, x=None, *args, **kwargs):===========================================(2) # [34;1mhow to create a __call__ method with param cls, x, *args, **kwargs;[0m; 
        if not args and not kwargs and x is not None and isinstance(x,cls): return x======(3) # [92;1mhow to express no args and no kwargs and x is an instance of cls?[0m; 
        res = super().__call__(*((x,) + args), **kwargs)==================================(4) # [37;1mhow to call __call__ of super class with x and consider all possible situations of args and kwargs[0m; 
        return res========================================================================(5)       
                                                                                                                                                        (6)
